#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HR
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HR")]
	public partial class DatabaseHRDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
        //internal object LogIn;

        #region Extensibility Method Definitions
        partial void OnCreated();
    partial void InsertWorker(Worker instance);
    partial void UpdateWorker(Worker instance);
    partial void DeleteWorker(Worker instance);
    partial void InsertContract(Contract instance);
    partial void UpdateContract(Contract instance);
    partial void DeleteContract(Contract instance);
    partial void InsertLogIn(LogIn instance);
    partial void UpdateLogIn(LogIn instance);
    partial void DeleteLogIn(LogIn instance);
    #endregion
		
		public DatabaseHRDataContext() : 
				base(global::HR.Properties.Settings.Default.HRConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseHRDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseHRDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseHRDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseHRDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Worker> Workers
		{
			get
			{
				return this.GetTable<Worker>();
			}
		}
		
		public System.Data.Linq.Table<Contract> Contracts
		{
			get
			{
				return this.GetTable<Contract>();
			}
		}
		
		public System.Data.Linq.Table<LogIn> LogIns
		{
			get
			{
				return this.GetTable<LogIn>();
			}
		}

        public object Login { get; internal set; }
        public object LogIn { get; internal set; }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Workers")]
	public partial class Worker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Imie;
		
		private string _Nazwisko;
		
		private string _Płeć;
		
		private System.DateTime _Data_urodzenia;
		
		private string _PESEL;
		
		private string _Status;
		
		private System.Nullable<decimal> _Wynagrodzenie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnImieChanging(string value);
    partial void OnImieChanged();
    partial void OnNazwiskoChanging(string value);
    partial void OnNazwiskoChanged();
    partial void OnPłećChanging(string value);
    partial void OnPłećChanged();
    partial void OnData_urodzeniaChanging(System.DateTime value);
    partial void OnData_urodzeniaChanged();
    partial void OnPESELChanging(string value);
    partial void OnPESELChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnWynagrodzenieChanging(System.Nullable<decimal> value);
    partial void OnWynagrodzenieChanged();
    #endregion
		
		public Worker()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imie", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string Imie
		{
			get
			{
				return this._Imie;
			}
			set
			{
				if ((this._Imie != value))
				{
					this.OnImieChanging(value);
					this.SendPropertyChanging();
					this._Imie = value;
					this.SendPropertyChanged("Imie");
					this.OnImieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwisko", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string Nazwisko
		{
			get
			{
				return this._Nazwisko;
			}
			set
			{
				if ((this._Nazwisko != value))
				{
					this.OnNazwiskoChanging(value);
					this.SendPropertyChanging();
					this._Nazwisko = value;
					this.SendPropertyChanged("Nazwisko");
					this.OnNazwiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Płeć", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Płeć
		{
			get
			{
				return this._Płeć;
			}
			set
			{
				if ((this._Płeć != value))
				{
					this.OnPłećChanging(value);
					this.SendPropertyChanging();
					this._Płeć = value;
					this.SendPropertyChanged("Płeć");
					this.OnPłećChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Data urodzenia]", Storage="_Data_urodzenia", DbType="Date NOT NULL")]
		public System.DateTime Data_urodzenia
		{
			get
			{
				return this._Data_urodzenia;
			}
			set
			{
				if ((this._Data_urodzenia != value))
				{
					this.OnData_urodzeniaChanging(value);
					this.SendPropertyChanging();
					this._Data_urodzenia = value;
					this.SendPropertyChanged("Data_urodzenia");
					this.OnData_urodzeniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PESEL", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string PESEL
		{
			get
			{
				return this._PESEL;
			}
			set
			{
				if ((this._PESEL != value))
				{
					this.OnPESELChanging(value);
					this.SendPropertyChanging();
					this._PESEL = value;
					this.SendPropertyChanged("PESEL");
					this.OnPESELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NChar(10)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wynagrodzenie", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Wynagrodzenie
		{
			get
			{
				return this._Wynagrodzenie;
			}
			set
			{
				if ((this._Wynagrodzenie != value))
				{
					this.OnWynagrodzenieChanging(value);
					this.SendPropertyChanging();
					this._Wynagrodzenie = value;
					this.SendPropertyChanged("Wynagrodzenie");
					this.OnWynagrodzenieChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contract")]
	public partial class Contract : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Rodzaj_umowy;
		
		private System.DateTime _Data_zawarcia;
		
		private string _Okres_umowy;
		
		private string _Stanowisko;
		
		private decimal _Kwota_bazowa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRodzaj_umowyChanging(string value);
    partial void OnRodzaj_umowyChanged();
    partial void OnData_zawarciaChanging(System.DateTime value);
    partial void OnData_zawarciaChanged();
    partial void OnOkres_umowyChanging(string value);
    partial void OnOkres_umowyChanged();
    partial void OnStanowiskoChanging(string value);
    partial void OnStanowiskoChanged();
    partial void OnKwota_bazowaChanging(decimal value);
    partial void OnKwota_bazowaChanged();
    #endregion
		
		public Contract()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Rodzaj umowy]", Storage="_Rodzaj_umowy", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Rodzaj_umowy
		{
			get
			{
				return this._Rodzaj_umowy;
			}
			set
			{
				if ((this._Rodzaj_umowy != value))
				{
					this.OnRodzaj_umowyChanging(value);
					this.SendPropertyChanging();
					this._Rodzaj_umowy = value;
					this.SendPropertyChanged("Rodzaj_umowy");
					this.OnRodzaj_umowyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Data zawarcia]", Storage="_Data_zawarcia", DbType="Date NOT NULL")]
		public System.DateTime Data_zawarcia
		{
			get
			{
				return this._Data_zawarcia;
			}
			set
			{
				if ((this._Data_zawarcia != value))
				{
					this.OnData_zawarciaChanging(value);
					this.SendPropertyChanging();
					this._Data_zawarcia = value;
					this.SendPropertyChanged("Data_zawarcia");
					this.OnData_zawarciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Okres umowy]", Storage="_Okres_umowy", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Okres_umowy
		{
			get
			{
				return this._Okres_umowy;
			}
			set
			{
				if ((this._Okres_umowy != value))
				{
					this.OnOkres_umowyChanging(value);
					this.SendPropertyChanging();
					this._Okres_umowy = value;
					this.SendPropertyChanged("Okres_umowy");
					this.OnOkres_umowyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stanowisko", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Stanowisko
		{
			get
			{
				return this._Stanowisko;
			}
			set
			{
				if ((this._Stanowisko != value))
				{
					this.OnStanowiskoChanging(value);
					this.SendPropertyChanging();
					this._Stanowisko = value;
					this.SendPropertyChanged("Stanowisko");
					this.OnStanowiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Kwota bazowa]", Storage="_Kwota_bazowa", DbType="Decimal(18,0) NOT NULL")]
		public decimal Kwota_bazowa
		{
			get
			{
				return this._Kwota_bazowa;
			}
			set
			{
				if ((this._Kwota_bazowa != value))
				{
					this.OnKwota_bazowaChanging(value);
					this.SendPropertyChanging();
					this._Kwota_bazowa = value;
					this.SendPropertyChanged("Kwota_bazowa");
					this.OnKwota_bazowaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LogIn")]
	public partial class LogIn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Uzytkownik;
		
		private string _Haslo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUzytkownikChanging(string value);
    partial void OnUzytkownikChanged();
    partial void OnHasloChanging(string value);
    partial void OnHasloChanged();
    #endregion
		
		public LogIn()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uzytkownik", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Uzytkownik
		{
			get
			{
				return this._Uzytkownik;
			}
			set
			{
				if ((this._Uzytkownik != value))
				{
					this.OnUzytkownikChanging(value);
					this.SendPropertyChanging();
					this._Uzytkownik = value;
					this.SendPropertyChanged("Uzytkownik");
					this.OnUzytkownikChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Haslo", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Haslo
		{
			get
			{
				return this._Haslo;
			}
			set
			{
				if ((this._Haslo != value))
				{
					this.OnHasloChanging(value);
					this.SendPropertyChanging();
					this._Haslo = value;
					this.SendPropertyChanged("Haslo");
					this.OnHasloChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
